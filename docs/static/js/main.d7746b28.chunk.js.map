{"version":3,"sources":["reducer.js","store.js","feature/GetToken.js","feature/GetAccess.js","components/IFrame.js","components/GenerateIFrame.js","components/GenerateVideoCard.js","App.js","index.js"],"names":["redirect_uri","initialState","URL","port","pathname","clientId","clientSecret","accessToken","parentDomain","hostname","createStore","state","action","type","flagString","a","length","result","split","reduce","res","item","parts","access_token","GetToken","claims","twitchUrl","window","location","replace","GetAccess","IFrame","height","width","allowfullscreen","autoplay","videoId","title","parent","description","undefined","Card","border","style","maxWidth","display","margin","Body","src","textOverflow","overflow","whiteSpace","GenerateIFrame","props","twitchGameData","map","element","id","GenerateVideoCard","gameName","dispatch","useDispatch","useState","setTwitchGameData","useSelector","OIDCImplicitCodeFlow","document","hash","substr","access_Token","useEffect","axios","get","headers","Authorization","response","status","data","getGameData","console","log","gameId","responseGameVideo","Container","fluid","flexWrap","Alert","show","variant","App","setGameName","searchValue","setSearchValue","store","Navbar","expand","bg","Nav","className","Brand","Form","inline","FormControl","placeholder","onChange","e","target","value","Button","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7746b28.chunk.js","sourcesContent":["const redirect_uri = \r\n//\"https://hsutinghuan.ddns.net/Web1\";\r\n`https://s780609.github.io/twitch-app`;\r\n//`http://localhost:3000`;\r\n\r\nconst port = new URL(redirect_uri).port ? \":\" + new URL(redirect_uri).port : \"\";\r\nconst pathname = new URL(redirect_uri).pathname == \"/\" ? \"\" : new URL(redirect_uri).pathname;\r\nconst parentDomain = new URL(redirect_uri).hostname // + pathname; //+ port //+ new URL(redirect_uri).pathname;\r\n\r\nconst initialState = {\r\n    clientId: \"vr0gbze3cw6zvxavzvjjxokdydm7cj\",\r\n    // this sevret is produced by twitch developer console\r\n    clientSecret: \"b1ew7n5ziqoxx1v5186x75nsvgbok0\",\r\n    accessToken: \"\",\r\n    redirect_uri: redirect_uri,\r\n    parentDomain: parentDomain,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"accessToken\":\r\n            return state = { ...state, accessToken: action.accessToken };\r\n        default:\r\n            return state = { ...state };\r\n    }\r\n}","import { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(\r\n    reducer,\r\n    //   composeWithDevTools(applyMiddleware(thunk))\r\n);","// setAccessToken is a function of parent's var\r\nasync function GetToken(flagString) {\r\n    if (flagString == null || flagString.length == 0) {\r\n        return;\r\n    }\r\n\r\n    var result = flagString.split('&').reduce(function (res, item) {\r\n        var parts = item.split('=');\r\n        res[parts[0]] = parts[1];\r\n        return res;\r\n    }, {});\r\n\r\n    // return Token\r\n    return result.access_token;\r\n}\r\n\r\nexport default GetToken;","import axios from \"axios\";\r\n\r\n// send users to twitch login page\r\nasync function GetAccess(clientId, redirect_uri) {\r\n    var claims = { \"id_token\": { \"email_verified\": null } };\r\n    const twitchUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`;\r\n\r\n    // refresh Url\r\n    await window.location.replace(twitchUrl);\r\n}\r\n\r\nexport default GetAccess;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardColumns, Figure } from 'react-bootstrap';\r\n\r\nfunction IFrame({ height, width, allowfullscreen = true, autoplay, videoId, title, description, parent }) {\r\n    if (width == undefined) width = \"400px\";\r\n    return (\r\n        <Card border=\"light\" style={{ maxWidth: width, width: width, display: \"BLOCK\", margin: \"auto\" }}>\r\n            <Card.Body>\r\n                <iframe\r\n                    title={title}\r\n                    src={`https://player.twitch.tv/?autoplay=${autoplay == null ? false : true}&parent=${parent}&video=${videoId}`}\r\n                    height={height == null ? 300 : height}\r\n                    width={width == null ? 400 : width}\r\n                    allowfullscreen={allowfullscreen == null ? true : allowfullscreen}\r\n                ></iframe>\r\n                <p style={{ maxWidth: width, textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}>\r\n                    {title}\r\n                </p>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\n// .wrapper {\r\n//     padding: 20px;\r\n//     background: #eaeaea;\r\n//     max-width: 400px;\r\n//     margin: 50px auto;\r\n//   }\r\n\r\n// .demo-2 {\r\n//     overflow: hidden;\r\n//     white-space: nowrap;\r\n//     text-overflow: ellipsis;\r\n//     max-width: 150px;\r\n//   }\r\n\r\nexport default IFrame;","import React, { useEffect, useState } from 'react';\r\nimport IFrame from \"./IFrame\";\r\nimport { CardGroup, Container, CardDeck, CardColumns } from 'react-bootstrap';\r\n\r\nfunction GenerateIFrame(props) {\r\n    var twitchGameData = props.twitchGameData;\r\n    var parentDomain = props.parentDomain;\r\n\r\n    if (twitchGameData == null || twitchGameData.length == 0) {\r\n        return (<></>);\r\n    }\r\n\r\n    return (<>\r\n        {\r\n            twitchGameData.map(element => {\r\n                return <IFrame key={element.id} videoId={element.id} title={element.title} description={element.description} parent={parentDomain}></IFrame>\r\n            })\r\n        }\r\n    </>);\r\n}\r\n\r\nexport default GenerateIFrame;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GetToken from '../feature/GetToken';\r\nimport GetAccess from \"../feature/GetAccess\";\r\nimport GenerateIFrame from \"../components/GenerateIFrame\";\r\nimport IFrame from \"./IFrame\";\r\nimport { Card, CardColumns, Alert, Container } from 'react-bootstrap';\r\n\r\nfunction GenerateVideoCard({ gameName }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [twitchGameData, setTwitchGameData] = useState([]);\r\n    //const [gameId, setGameId] = useState(\"\");\r\n    const accessToken = useSelector((state) => state.accessToken);\r\n    const clientId = useSelector((state) => state.clientId);\r\n    const redirect_uri = useSelector((state) => state.redirect_uri);\r\n    const parentDomain = useSelector(state => state.parentDomain);\r\n\r\n    if (gameName === ``) {\r\n        gameName = `minecraft`;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (accessToken !== \"\") {\r\n            return;\r\n        }\r\n\r\n        await OIDCImplicitCodeFlow();\r\n    }, []);\r\n\r\n    async function OIDCImplicitCodeFlow() {\r\n        // On your server, get an access token and ID token by making this request:\r\n        // json POST https://id.twitch.tv/oauth2/token ?client_id=<your client ID> &client_secret=<your client secret> &code=<authorization code received above> &grant_type=authorization_code &redirect_uri=<your registered redirect URI>\r\n        const flagString = document.location.hash.substr(1);\r\n\r\n        if (flagString == \"\") {\r\n            await GetAccess(clientId, redirect_uri);\r\n        }\r\n        else {\r\n            const access_Token = await GetToken(flagString);\r\n            dispatch({ type: \"accessToken\", accessToken: access_Token });\r\n        }\r\n    }\r\n\r\n    // get data of game id and data\r\n    useEffect(async () => {\r\n        if (accessToken == \"\") {\r\n            return;\r\n        }\r\n\r\n        // use the search categories api can query game id by fuzzy search\r\n        const response = await axios.get(`https://api.twitch.tv/helix/search/categories?query=${gameName}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \"Client-Id\": `${clientId}`\r\n            }\r\n        });\r\n\r\n        // 這段請求一定要用完整的遊戲名稱 ex: League of Legends、fortnite、minecraft、apex legends\r\n        // const response = await axios.get(`https://api.twitch.tv/helix/games?name=${gameName}`, {\r\n        //     headers: {\r\n        //         Authorization: `Bearer ${accessToken}`,\r\n        //         \"Client-Id\": `${clientId}`\r\n        //     }\r\n        // });\r\n\r\n        if (response.status == 200 && response.data != null && response.data.data.length != 0) {\r\n            const data = await getGameData(\r\n                response.data.data[0].id\r\n                //`25287`\r\n            );\r\n\r\n            setTwitchGameData(data);\r\n        }\r\n        else {\r\n            console.log(`response's data is empty, search by => ${gameName}`);\r\n        }\r\n    }, [accessToken, gameName]);\r\n\r\n    // get videos by gameId\r\n    const getGameData = async (gameId) => {\r\n        if (!gameId) {\r\n            return;\r\n        }\r\n\r\n        const responseGameVideo = await axios.get(\r\n            `https://api.twitch.tv/helix/videos?game_id=${gameId}&first=20`\r\n            //`https://api.twitch.tv/helix/videos?game_id=1848487811&first=20`\r\n            , {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    \"Client-Id\": `${clientId}`\r\n                }\r\n            });\r\n\r\n        return responseGameVideo.data.data;\r\n    }\r\n\r\n    return (<Container fluid style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {(twitchGameData == null || twitchGameData.length == 0) ? <Alert show={true} variant=\"info\">沒有影片</Alert> : <></>}\r\n        <GenerateIFrame twitchGameData={twitchGameData} parentDomain={parentDomain}></GenerateIFrame>\r\n    </Container >);\r\n}\r\n\r\nexport default GenerateVideoCard;","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store';\r\nimport GenerateVideoCard from \"./components/GenerateVideoCard\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Nav, Button, Form, FormControl } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [gameName, setGameName] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  function onChange(e) {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  function onClick(e) {\r\n    setGameName(searchValue);\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <>\r\n          <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Nav className=\"container-fluid\" >\r\n              <Navbar.Brand>{`twitch-app`}</Navbar.Brand>\r\n              <Form inline className=\"ml-auto\">\r\n                <FormControl type=\"input\" placeholder=\"Search Game Name\" className=\"mr-sm-2\" onChange={onChange} />\r\n                <Button variant=\"outline-success\" onClick={onClick}>Search</Button>\r\n              </Form>\r\n            </Nav>\r\n          </Navbar>\r\n        </>\r\n        <Switch>\r\n          {/* <Route path=\"/twitch-app/videos\"> */}\r\n          <GenerateVideoCard gameName={gameName} />\r\n          {/* </Route> */}\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}