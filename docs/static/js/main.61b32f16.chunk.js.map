{"version":3,"sources":["reducer.js","store.js","feature/GetToken.js","feature/GetAccess.js","components/IFrame.js","components/GenerateIFrame.js","components/GenerateVideoCard.js","App.js","index.js"],"names":["redirect_uri","initialState","URL","port","pathname","clientId","clientSecret","accessToken","parentDomain","hostname","createStore","state","action","console","log","type","flagString","a","length","result","split","reduce","res","item","parts","access_token","GetToken","claims","twitchUrl","window","location","replace","GetAccess","IFrame","height","width","allowfullscreen","autoplay","videoId","title","parent","description","Card","border","style","src","Header","Body","GenerateIFrame","props","twitchGameData","CardColumns","map","element","id","GenerateVideoCard","gameName","dispatch","useDispatch","useState","setTwitchGameData","useSelector","OIDCImplicitCodeFlow","document","hash","substr","access_Token","useEffect","axios","get","headers","Authorization","response","status","data","getGameData","gameId","responseGameVideo","Container","Alert","show","variant","App","setGameName","searchValue","setSearchValue","store","Navbar","expand","bg","Nav","className","Brand","Form","inline","FormControl","placeholder","onChange","e","target","value","Button","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61b32f16.chunk.js","sourcesContent":["const redirect_uri = \r\n//\"https://hsutinghuan.ddns.net/Web1\";\r\n`https://s780609.github.io/twitch-app`;\r\n//`http://localhost:3000`;\r\n\r\nconst port = new URL(redirect_uri).port ? \":\" + new URL(redirect_uri).port : \"\";\r\nconst pathname = new URL(redirect_uri).pathname == \"/\" ? \"\" : new URL(redirect_uri).pathname;\r\nconst parentDomain = new URL(redirect_uri).hostname //+ pathname; //+ port //+ new URL(redirect_uri).pathname;\r\n\r\nconst initialState = {\r\n    clientId: \"vr0gbze3cw6zvxavzvjjxokdydm7cj\",\r\n    // this sevret is produced by twitch developer console\r\n    clientSecret: \"b1ew7n5ziqoxx1v5186x75nsvgbok0\",\r\n    accessToken: \"\",\r\n    redirect_uri: redirect_uri,\r\n    parentDomain: parentDomain,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"accessToken\":\r\n            return state = { ...state, accessToken: action.accessToken };\r\n        default:\r\n            return state = { ...state };\r\n    }\r\n}","import { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(\r\n    reducer,\r\n    //   composeWithDevTools(applyMiddleware(thunk))\r\n);","// setAccessToken is a function of parent's var\r\nasync function GetToken(flagString) {\r\n    if (flagString == null || flagString.length == 0) {\r\n        return;\r\n    }\r\n\r\n    var result = flagString.split('&').reduce(function (res, item) {\r\n        var parts = item.split('=');\r\n        res[parts[0]] = parts[1];\r\n        return res;\r\n    }, {});\r\n\r\n    // return Token\r\n    return result.access_token;\r\n}\r\n\r\nexport default GetToken;","import axios from \"axios\";\r\n\r\n// send users to twitch login page\r\nasync function GetAccess(clientId, redirect_uri) {\r\n    var claims = { \"id_token\": { \"email_verified\": null } };\r\n    const twitchUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`;\r\n\r\n    // refresh Url\r\n    await window.location.replace(twitchUrl);\r\n}\r\n\r\nexport default GetAccess;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardColumns, Figure } from 'react-bootstrap';\r\n\r\nfunction IFrame({ height, width, allowfullscreen, autoplay, videoId, title, description, parent }) {\r\n    return (\r\n        <Card border=\"light\" style={{ width: '400px' }}>\r\n            {/* <div style={{ width: \"400px\", margin: \"10px\", marginRight: \"-50px\", display: \"inline-block\" }}> */}\r\n            <iframe\r\n                src={`https://player.twitch.tv/?autoplay=${autoplay == null ? false : true}&parent=${parent}&video=${videoId}`}\r\n                height={height == null ? 300 : height}\r\n                width={width == null ? 400 : width}\r\n                allowfullscreen={allowfullscreen == null ? true : allowfullscreen}\r\n            ></iframe>\r\n            {/* </div> */}\r\n            <Card.Header>{title}</Card.Header>\r\n            <Card.Body>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default IFrame;","import React, { useEffect, useState } from 'react';\r\nimport IFrame from \"./IFrame\";\r\nimport { CardGroup, Container, CardDeck, CardColumns } from 'react-bootstrap';\r\n\r\nfunction GenerateIFrame(props) {\r\n    var twitchGameData = props.twitchGameData;\r\n    var parentDomain = props.parentDomain;\r\n\r\n    if (twitchGameData == null || twitchGameData.length == 0) {\r\n        return (<></>);\r\n    }\r\n    \r\n    return (<CardColumns>\r\n        {\r\n            twitchGameData.map(element => {\r\n                return <IFrame key={element.id} videoId={element.id} title={element.title} description={element.description} parent={parentDomain}></IFrame>\r\n            })\r\n        }\r\n    </CardColumns>);\r\n}\r\n\r\nexport default GenerateIFrame;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GetToken from '../feature/GetToken';\r\nimport GetAccess from \"../feature/GetAccess\";\r\nimport GenerateIFrame from \"../components/GenerateIFrame\";\r\nimport IFrame from \"./IFrame\";\r\nimport { Card, CardColumns, Alert, Container } from 'react-bootstrap';\r\n\r\nfunction GenerateVideoCard({ gameName }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [twitchGameData, setTwitchGameData] = useState([]);\r\n    //const [gameId, setGameId] = useState(\"\");\r\n    const accessToken = useSelector((state) => state.accessToken);\r\n    const clientId = useSelector((state) => state.clientId);\r\n    const redirect_uri = useSelector((state) => state.redirect_uri);\r\n    const parentDomain = useSelector(state => state.parentDomain);\r\n\r\n    useEffect(async () => {\r\n        if (accessToken !== \"\") {\r\n            return;\r\n        }\r\n\r\n        await OIDCImplicitCodeFlow();\r\n    }, []);\r\n\r\n    async function OIDCImplicitCodeFlow() {\r\n        // On your server, get an access token and ID token by making this request:\r\n        // json POST https://id.twitch.tv/oauth2/token ?client_id=<your client ID> &client_secret=<your client secret> &code=<authorization code received above> &grant_type=authorization_code &redirect_uri=<your registered redirect URI>\r\n        const flagString = document.location.hash.substr(1);\r\n\r\n        if (flagString == \"\") {\r\n            await GetAccess(clientId, redirect_uri);\r\n        }\r\n        else {\r\n            const access_Token = await GetToken(flagString);\r\n            dispatch({ type: \"accessToken\", accessToken: access_Token });\r\n        }\r\n    }\r\n\r\n    // get data of game id and data\r\n    useEffect(async () => {\r\n        if (accessToken == \"\") {\r\n            return;\r\n        }\r\n\r\n        const response = await axios.get(`https://api.twitch.tv/helix/games?name=${gameName}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \"Client-Id\": `${clientId}`\r\n            }\r\n        });\r\n\r\n        if (response.status == 200 && response.data != null && response.data.data.length != 0) {\r\n            const data = await getGameData(response.data.data[0].id);\r\n\r\n            setTwitchGameData(data);\r\n        }\r\n        else {\r\n            console.log(`response's data is empty, search by => ${gameName}`);\r\n        }\r\n    }, [accessToken, gameName]);\r\n\r\n    // get videos by gameId\r\n    const getGameData = async (gameId) => {\r\n        if (!gameId) {\r\n            return;\r\n        }\r\n\r\n        const responseGameVideo = await axios.get(\r\n            `https://api.twitch.tv/helix/videos?game_id=${gameId}&first=20`\r\n            //`https://api.twitch.tv/helix/videos?game_id=1848487811&first=20`\r\n            , {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    \"Client-Id\": `${clientId}`\r\n                }\r\n            });\r\n\r\n        return responseGameVideo.data.data;\r\n    }\r\n\r\n    return (<Container >\r\n        {(twitchGameData == null || twitchGameData.length == 0) ? <Alert show={true} variant=\"info\">查無資料</Alert> : <></>}\r\n        <GenerateIFrame twitchGameData={twitchGameData} parentDomain={parentDomain}></GenerateIFrame>\r\n    </Container >);\r\n}\r\n\r\nexport default GenerateVideoCard;","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store';\r\nimport GenerateVideoCard from \"./components/GenerateVideoCard\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Nav, Button, Form, FormControl } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [gameName, setGameName] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  function onChange(e) {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  function onClick(e) {\r\n    setGameName(searchValue);\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <>\r\n          <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Nav className=\"container-fluid\" >\r\n              <Navbar.Brand>{`twitch-app`}</Navbar.Brand>\r\n              <Form inline className=\"ml-auto\">\r\n                <FormControl type=\"input\" placeholder=\"Search Game Name\" className=\"mr-sm-2\" onChange={onChange} />\r\n                <Button variant=\"outline-success\" onClick={onClick}>Search</Button>\r\n              </Form>\r\n            </Nav>\r\n          </Navbar>\r\n        </>\r\n        <Switch>\r\n          {/* <Route path=\"/twitch-app/videos\"> */}\r\n          <GenerateVideoCard gameName={gameName} />\r\n          {/* </Route> */}\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}