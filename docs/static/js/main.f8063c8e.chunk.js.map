{"version":3,"sources":["feature/GetToken.js","reducer.js","store.js","feature/GetAccess.js","components/IFrame.js","components/GenerateIFrame.js","components/GenerateVideoCard.js","App.js","index.js"],"names":["flagString","a","length","result","split","reduce","res","item","parts","access_token","GetToken","initialState","clientId","clientSecret","accessToken","redirect_uri","parentDomain","createStore","state","action","token","claims","twitchUrl","window","location","replace","GetAccess","IFrame","height","width","allowfullscreen","autoplay","videoId","title","parent","description","style","margin","marginRight","display","src","GenerateIFrame","props","twitchGameData","console","log","CardColumns","map","element","id","GenerateVideoCard","dispatch","useDispatch","useState","setAccessToken","setTwitchGameData","useSelector","OIDCImplicitCodeFlow","document","hash","substr","access_Token","type","useEffect","axios","get","headers","Authorization","response","gameId","data","responseGameVideo","App","store","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8063c8e.chunk.js","sourcesContent":["// setAccessToken is a function of parent's var\r\nasync function GetToken(flagString) {\r\n    if (flagString == null || flagString.length == 0) {\r\n        return;\r\n    }\r\n\r\n    var result = flagString.split('&').reduce(function (res, item) {\r\n        var parts = item.split('=');\r\n        res[parts[0]] = parts[1];\r\n        return res;\r\n    }, {});\r\n\r\n    // return Token\r\n    return result.access_token;\r\n}\r\n\r\nexport default GetToken;","\r\n//const [token, setToken] = useState(\"\");\r\n\r\n// const redirect_uri =\r\n//     //   \"http://localhost:3000\"\r\n//     `https://s780609.github.io`;\r\n\r\n// const parent =\r\n//     //\"localhost\"\r\n//     `s780609.github.io`;\r\n\r\nconst initialState = {\r\n    clientId: \"vr0gbze3cw6zvxavzvjjxokdydm7cj\",\r\n    clientSecret: \"3x2oiag46esvkqhp99ah13q1cr3wyk\",\r\n    accessToken: \"\",\r\n    redirect_uri: \"http://localhost:3000\",\r\n    //`https://s780609.github.io/twitch-app`,\r\n    parentDomain:\r\n        \"localhost\",\r\n    //`s780609.github.io/twitch-app`\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.accessToken) {\r\n        case \"accessToken\":\r\n            return state = { ...state, token: action.accessToken };\r\n        default:\r\n            return state = { ...state };\r\n    }\r\n}","import { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(\r\n    reducer,\r\n    //   composeWithDevTools(applyMiddleware(thunk))\r\n);","import axios from \"axios\";\r\n\r\n// send users to twitch login page\r\nasync function GetAccess(clientId, redirect_uri) {\r\n    var claims = { \"id_token\": { \"email_verified\": null } };\r\n    const twitchUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`;\r\n\r\n    // refresh Url\r\n    await window.location.replace(twitchUrl);\r\n}\r\n\r\nexport default GetAccess;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { Card, CardColumns } from 'react-bootstrap';\r\n\r\nfunction IFrame({ height, width, allowfullscreen, autoplay, videoId, title, description, parent }) {\r\n    return (\r\n        // <Card border=\"primary\">\r\n        //     <Card.Body>\r\n        //         <Card.Title>{title}</Card.Title>\r\n        <div style={{ width: \"400px\", margin: \"10px\", marginRight: \"-50px\", display: \"inline-block\" }}><h3>{title}</h3>\r\n            <iframe\r\n                src={`https://player.twitch.tv/?autoplay=${autoplay == null ? false : true}&parent=${parent}&video=${videoId}`}\r\n                height={height == null ? 300 : height}\r\n                width={width == null ? 400 : width}\r\n                allowfullscreen={allowfullscreen == null ? `allowFullScreen` : allowfullscreen}\r\n            ></iframe>\r\n        </div>\r\n        //     </Card.Body>\r\n        // </Card>\r\n    );\r\n}\r\n\r\nexport default IFrame;","import React, { useEffect, useState } from 'react';\r\nimport IFrame from \"./IFrame\";\r\nimport { CardColumns } from 'react-bootstrap';\r\n\r\nfunction GenerateIFrame(props) {\r\n    var twitchGameData = props.twitchGameData;\r\n    var parentDomain = props.parentDomain;\r\n\r\n    if (twitchGameData == null || twitchGameData.length == 0) {\r\n        console.log(\"twitchGameData is empty\");\r\n        return (<>{`empty`}</>);\r\n    }\r\n\r\n    return (<CardColumns>\r\n        {\r\n            twitchGameData.map(element => {\r\n                return <IFrame key={element.id} videoId={element.id} title={element.title} description={element.description} parent={parentDomain}></IFrame>\r\n            })\r\n        }\r\n    </CardColumns>);\r\n}\r\n\r\nexport default GenerateIFrame;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GetToken from '../feature/GetToken';\r\nimport GetAccess from \"../feature/GetAccess\";\r\nimport GenerateIFrame from \"../components/GenerateIFrame\";\r\nimport IFrame from \"./IFrame\";\r\nimport { CardColumns } from 'react-bootstrap';\r\n\r\nfunction GenerateVideoCard() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const [twitchGameData, setTwitchGameData] = useState([]);\r\n\r\n    const clientId = useSelector((state) => state.clientId);\r\n    const redirect_uri = useSelector((state) => state.redirect_uri);\r\n    const parentDomain = useSelector(state => state.parentDomain);\r\n\r\n    // setAccessToken(useSelector((state) => state.accessToken));\r\n\r\n    useEffect(async () => {\r\n        await OIDCImplicitCodeFlow();\r\n    }, []);\r\n\r\n    async function OIDCImplicitCodeFlow() {\r\n        // On your server, get an access token and ID token by making this request:\r\n        // json POST https://id.twitch.tv/oauth2/token ?client_id=<your client ID> &client_secret=<your client secret> &code=<authorization code received above> &grant_type=authorization_code &redirect_uri=<your registered redirect URI>\r\n        const flagString = document.location.hash.substr(1);\r\n\r\n        if (flagString == \"\") {\r\n            // var claims = { \"id_token\": { \"email_verified\": null } };\r\n            // console.log(`https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`);\r\n            // const twitchUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`;\r\n\r\n            await GetAccess(clientId, redirect_uri);\r\n        }\r\n        else {\r\n            const access_Token = await GetToken(flagString);\r\n            dispatch({ type: \"accessToken\", accessToken: access_Token });\r\n            setAccessToken(access_Token);\r\n        }\r\n    }\r\n\r\n    // get data of game id \r\n    useEffect(async () => {\r\n        if (accessToken == \"\") {\r\n            return;\r\n        }\r\n\r\n        const response = await axios.get(`https://api.twitch.tv/helix/games/top`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \"Client-Id\": `${clientId}`\r\n            }\r\n        });\r\n\r\n        const gameId = response.data.data[4].id;\r\n        // console.log(` gameId == ${gameId}`);\r\n        // console.log(`Bearer ${accessToken}`);\r\n        // console.log(`${clientId}`);\r\n        const responseGameVideo = await axios.get(`https://api.twitch.tv/helix/videos?game_id=${gameId}&first=20`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \"Client-Id\": `${clientId}`\r\n            }\r\n        });\r\n        console.log(responseGameVideo);\r\n        setTwitchGameData(responseGameVideo.data.data);\r\n    }, [accessToken]);\r\n\r\n    return (<>\r\n        <GenerateIFrame twitchGameData={twitchGameData} parentDomain={parentDomain}></GenerateIFrame>\r\n    </>);\r\n}\r\n\r\nexport default GenerateVideoCard;","import './App.css';\nimport GetToken from \"./feature/GetToken\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport { useEffect } from 'react';\nimport GenerateVideoCard from \"./components/GenerateVideoCard\";\n\nfunction App() {\n\n  useEffect(async () => {\n    await GetToken();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <GenerateVideoCard />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}