{"version":3,"sources":["reducer.js","store.js","feature/GetToken.js","feature/GetAccess.js","components/IFrame.js","components/GenerateIFrame.js","components/GenerateVideoCard.js","App.js","index.js"],"names":["redirect_uri","initialState","URL","port","pathname","clientId","clientSecret","accessToken","parentDomain","hostname","createStore","state","action","type","flagString","a","length","result","split","reduce","res","item","parts","access_token","GetToken","claims","twitchUrl","window","location","replace","GetAccess","IFrame","height","width","allowfullscreen","autoplay","videoId","title","parent","description","undefined","Card","border","style","maxWidth","display","margin","Body","src","allowFullScreen","textOverflow","overflow","whiteSpace","GenerateIFrame","props","twitchGameData","map","element","id","GenerateVideoCard","gameName","dispatch","useDispatch","useState","setTwitchGameData","useSelector","OIDCImplicitCodeFlow","document","hash","substr","access_Token","useEffect","loader","show","getTopGames","responseData","console","log","i","gameId","getGameData","data","getDevelopeVideo","getGameIds","close","searchUrl","axios","get","headers","Authorization","response","status","responseGameVideo","error","alert","message","Container","fluid","flexWrap","Alert","variant","App","setGameName","searchValue","setSearchValue","store","Navbar","expand","bg","Nav","className","Brand","Form","inline","FormControl","placeholder","onChange","e","target","value","Button","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0809721.chunk.js","sourcesContent":["const redirect_uri = \r\n//\"https://hsutinghuan.ddns.net/Web1\";\r\n`https://s780609.github.io/twitch-app`;\r\n//`http://localhost:3000`;\r\n\r\nconst port = new URL(redirect_uri).port ? \":\" + new URL(redirect_uri).port : \"\";\r\nconst pathname = new URL(redirect_uri).pathname == \"/\" ? \"\" : new URL(redirect_uri).pathname;\r\nconst parentDomain = new URL(redirect_uri).hostname // + pathname; //+ port //+ new URL(redirect_uri).pathname;\r\n\r\nconst initialState = {\r\n    clientId: \"vr0gbze3cw6zvxavzvjjxokdydm7cj\",\r\n    // this sevret is produced by twitch developer console\r\n    clientSecret: \"b1ew7n5ziqoxx1v5186x75nsvgbok0\",\r\n    accessToken: \"\",\r\n    redirect_uri: redirect_uri,\r\n    parentDomain: parentDomain,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"accessToken\":\r\n            return state = { ...state, accessToken: action.accessToken };\r\n        default:\r\n            return state = { ...state };\r\n    }\r\n}","import { applyMiddleware } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport default createStore(\r\n    reducer,\r\n    //   composeWithDevTools(applyMiddleware(thunk))\r\n);","// setAccessToken is a function of parent's var\r\nasync function GetToken(flagString) {\r\n    if (flagString == null || flagString.length == 0) {\r\n        return;\r\n    }\r\n\r\n    var result = flagString.split('&').reduce(function (res, item) {\r\n        var parts = item.split('=');\r\n        res[parts[0]] = parts[1];\r\n        return res;\r\n    }, {});\r\n\r\n    // return Token\r\n    return result.access_token;\r\n}\r\n\r\nexport default GetToken;","import axios from \"axios\";\r\n\r\n// send users to twitch login page\r\nasync function GetAccess(clientId, redirect_uri) {\r\n    var claims = { \"id_token\": { \"email_verified\": null } };\r\n    const twitchUrl = `https://id.twitch.tv/oauth2/authorize?response_type=token+id_token&client_id=${clientId}&redirect_uri=${redirect_uri}&&scope=viewing_activity_read+openid&claims=${claims}`;\r\n\r\n    // refresh Url\r\n    await window.location.replace(twitchUrl);\r\n}\r\n\r\nexport default GetAccess;","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardColumns, Figure } from 'react-bootstrap';\r\n\r\nfunction IFrame({ height, width, allowfullscreen = true, autoplay, videoId, title, description, parent }) {\r\n    if (width == undefined) width = \"400px\";\r\n    return (\r\n        <Card border=\"light\" style={{ maxWidth: width, width: width, display: \"BLOCK\", margin: \"auto\" }}>\r\n            <Card.Body>\r\n                <iframe\r\n                    title={title}\r\n                    src={`https://player.twitch.tv/?autoplay=${autoplay == null ? false : true}&parent=${parent}&video=${videoId}`}\r\n                    height={height == null ? 300 : height}\r\n                    width={width == null ? 400 : width}\r\n                    allowFullScreen={allowfullscreen == null ? true : allowfullscreen}\r\n                ></iframe>\r\n                <p style={{ maxWidth: width, textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}>\r\n                    {title}\r\n                </p>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\n// .wrapper {\r\n//     padding: 20px;\r\n//     background: #eaeaea;\r\n//     max-width: 400px;\r\n//     margin: 50px auto;\r\n//   }\r\n\r\n// .demo-2 {\r\n//     overflow: hidden;\r\n//     white-space: nowrap;\r\n//     text-overflow: ellipsis;\r\n//     max-width: 150px;\r\n//   }\r\n\r\nexport default IFrame;","import React, { useEffect, useState } from 'react';\r\nimport IFrame from \"./IFrame\";\r\nimport { CardGroup, Container, CardDeck, CardColumns } from 'react-bootstrap';\r\n\r\nfunction GenerateIFrame(props) {\r\n    var twitchGameData = props.twitchGameData;\r\n    var parentDomain = props.parentDomain;\r\n\r\n    if (twitchGameData == null || twitchGameData.length == 0) {\r\n        return (<></>);\r\n    }\r\n\r\n    return (<>\r\n        {\r\n            twitchGameData.map(element => {\r\n                return <IFrame key={element.id} videoId={element.id} title={element.title} description={element.description} parent={parentDomain}></IFrame>\r\n            })\r\n        }\r\n    </>);\r\n}\r\n\r\nexport default GenerateIFrame;","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GetToken from '../feature/GetToken';\r\nimport GetAccess from \"../feature/GetAccess\";\r\nimport GenerateIFrame from \"../components/GenerateIFrame\";\r\nimport IFrame from \"./IFrame\";\r\nimport { Card, CardColumns, Alert, Container } from 'react-bootstrap';\r\nimport loader from 'archer-loader';\r\n\r\nfunction GenerateVideoCard({ gameName }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [twitchGameData, setTwitchGameData] = useState([]);\r\n    //const [gameId, setGameId] = useState(\"\");\r\n    const accessToken = useSelector((state) => state.accessToken);\r\n    const clientId = useSelector((state) => state.clientId);\r\n    const redirect_uri = useSelector((state) => state.redirect_uri);\r\n    const parentDomain = useSelector(state => state.parentDomain);\r\n\r\n    useEffect(async () => {\r\n        if (accessToken !== \"\") {\r\n            return;\r\n        }\r\n\r\n        await OIDCImplicitCodeFlow();\r\n    }, []);\r\n\r\n    async function OIDCImplicitCodeFlow() {\r\n        // On your server, get an access token and ID token by making this request:\r\n        // json POST https://id.twitch.tv/oauth2/token ?client_id=<your client ID> &client_secret=<your client secret> &code=<authorization code received above> &grant_type=authorization_code &redirect_uri=<your registered redirect URI>\r\n        const flagString = document.location.hash.substr(1);\r\n\r\n        if (flagString == \"\") {\r\n            await GetAccess(clientId, redirect_uri);\r\n        }\r\n        else {\r\n            const access_Token = await GetToken(flagString);\r\n            dispatch({ type: \"accessToken\", accessToken: access_Token });\r\n        }\r\n    }\r\n\r\n    // get data of game id and data\r\n    useEffect(async () => {\r\n        if (accessToken == \"\") {\r\n            return;\r\n        }\r\n\r\n        loader.show(\"#255AC4\", 1.5, \"Loading...\");\r\n\r\n        if (gameName == \"\") {\r\n            const responseData = await getTopGames();\r\n            console.log(responseData)\r\n            for (let i = 0; i < responseData.length; i++) {\r\n\r\n                let gameId = responseData[i].id;\r\n                console.log(gameId);\r\n                const data = await getGameData(\r\n                    gameId\r\n                );\r\n\r\n                if (data != null && data.length != 0) {\r\n                    setTwitchGameData(data);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const data = await getDevelopeVideo();\r\n            setTwitchGameData(data);\r\n\r\n        }\r\n        else {\r\n            // use the search categories api can query game id by fuzzy search\r\n            const responseData = await getGameIds();\r\n\r\n            if (responseData != undefined && responseData.length != 0) {\r\n                for (let i = 0; i < responseData.length; i++) {\r\n                    let gameId = responseData[i].id;\r\n                    console.log(gameId);\r\n                    const data = await getGameData(\r\n                        gameId\r\n                        //`25287`\r\n                    );\r\n\r\n                    if (data != null && data.length != 0) {\r\n                        setTwitchGameData(data);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                const data = await getDevelopeVideo();\r\n                setTwitchGameData(data);\r\n            }\r\n        }\r\n\r\n        loader.close();\r\n    }, [accessToken, gameName]);\r\n\r\n    const getGameIds = async () => {\r\n        const searchUrl = //`https://api.twitch.tv/helix/search/categories?query=${gameName}`;\r\n            `https://api.twitch.tv/helix/games?name=${gameName}`;\r\n\r\n        // use the search categories api can query game id by fuzzy search\r\n        const response = await axios.get(searchUrl, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n                \"Client-Id\": `${clientId}`\r\n            }\r\n        });\r\n\r\n        if (response.status == 200 && response.data != null && response.data.data.length != 0) {\r\n            return response.data.data;\r\n        }\r\n    }\r\n\r\n    // get videos by gameId\r\n    const getGameData = async (gameId) => {\r\n        if (!gameId) {\r\n            return;\r\n        }\r\n\r\n        // 這段請求一定要用完整的遊戲名稱 ex: League of Legends、fortnite、minecraft、apex legends\r\n        const responseGameVideo = await axios.get(\r\n            `https://api.twitch.tv/helix/videos?game_id=${gameId}&first=20`\r\n            , {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    \"Client-Id\": `${clientId}`\r\n                }\r\n            });\r\n\r\n        return responseGameVideo.data.data;\r\n    }\r\n\r\n    // get developer video\r\n    const getDevelopeVideo = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                `https://api.twitch.tv/helix/videos?id=335921245`\r\n                , {\r\n                    headers: {\r\n                        Authorization: `Bearer ${accessToken}`,\r\n                        \"Client-Id\": `${clientId}`\r\n                    }\r\n                });\r\n\r\n            return response.data.data;\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            alert(err.message);\r\n        }\r\n    }\r\n\r\n    const getTopGames = async () => {\r\n        const response = await axios.get(\r\n            `https://api.twitch.tv/helix/games/top`\r\n            , {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                    \"Client-Id\": `${clientId}`\r\n                }\r\n            });\r\n\r\n        return response.data.data;\r\n    }\r\n\r\n    return (<Container fluid style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {(twitchGameData == null || twitchGameData.length == 0) ? <Alert show={true} variant=\"info\">沒有影片</Alert> : <></>}\r\n        <GenerateIFrame twitchGameData={twitchGameData} parentDomain={parentDomain}></GenerateIFrame>\r\n    </Container >);\r\n}\r\n\r\nexport default GenerateVideoCard;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport GenerateVideoCard from \"./components/GenerateVideoCard\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Nav, Button, Form, FormControl } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [gameName, setGameName] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  function onChange(e) {\n    setSearchValue(e.target.value);\n  }\n\n  function onClick(e) {\n    setGameName(searchValue);\n  }\n\n  const getTopGames = async () => {\n    setGameName(``);\n  }\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <>\n          <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Nav className=\"container-fluid\" >\n              <Navbar.Brand>{`twitch-app`}</Navbar.Brand>\n              <Form inline className=\"ml-auto\">\n                <FormControl type=\"input\" placeholder=\"Search Game Name\" className=\"mr-sm-2\" onChange={onChange} />\n                <Button variant=\"outline-success\" onClick={onClick}>Search</Button>\n                <Button variant=\"outline-success\" onClick={getTopGames}>Top Games</Button>\n              </Form>\n            </Nav>\n          </Navbar>\n        </>\n        <Switch>\n          {/* <Route path=\"/twitch-app/videos\"> */}\n          <GenerateVideoCard gameName={gameName} />\n          {/* </Route> */}\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}